name: Keep Render Warm (Render)

on:
  schedule:
    - cron: "*/5 * * * *"     # every 5 minutes (UTC)
  workflow_dispatch:          # allow manual runs

permissions:
  contents: read

concurrency:
  group: keep-render-warm
  cancel-in-progress: false

jobs:
  ping:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        url:
          # MCP relay: root path (no /health yet)
          - https://synorb-mcp-relay-svc.onrender.com/
          # API client: /health works here
          - https://apiclient-uim1.onrender.com/health
    steps:
      - name: Small random jitter
        run: sleep $((RANDOM % 60))

      - name: Warm ${{ matrix.url }}
        run: |
          # Don't fail the job on non-2xx; goal is to keep the app hot.
          set +e
          URL="${{ matrix.url }}?t=$(date +%s)"
          echo "Pinging: $URL"

          # Try HEAD up to 3 times (fast & cheap)
          for i in 1 2 3; do
            code=$(curl -s -o /dev/null -w "%{http_code}" -I "$URL")
            echo "HEAD attempt $i -> $code"
            [ "$code" -gt 0 ] && break
            sleep 2
          done

          # If HEAD is not successful, do a GET once (also warms caches)
          if [ "$code" -eq 000 ] || [ "$code" -ge 400 ]; then
            code=$(curl -s -o /dev/null -w "%{http_code}" "$URL")
            echo "GET fallback -> $code"
          fi

          echo "Done warming: $URL"
